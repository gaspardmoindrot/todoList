{"ast":null,"code":"var _jsxFileName = \"/Users/gaspardmoindrot/todo-list/todo-list-front/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Todos } from './Todos';\nimport { TodoInput } from './TodoInput';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initTodos = [{\n  text: '',\n  complete: false\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(initTodos);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    let response = await (await fetch(\"http://localhost:8080/state/all\")).json();\n    setTodos(response);\n  };\n\n  useEffect(() => {\n    // DELETE request using fetch with error handling\n    fetch('https://jsonplaceholder.typicode.com/invalid-url', {\n      method: 'DELETE'\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      setStatus('Delete successful');\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error('There was an error!', error);\n    });\n  }, []);\n\n  const changeTodos = todo => {\n    const newTodos = todos.map(unitTodo => {\n      if (unitTodo === todo) {\n        unitTodo.complete = !unitTodo.complete;\n      }\n\n      return unitTodo;\n    });\n    setTodos(newTodos);\n  };\n\n  const addTodo = text => {\n    const newTodo = {\n      text,\n      complete: false\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mylist\",\n      children: /*#__PURE__*/_jsxDEV(Todos, {\n        todos: todos,\n        changeTodos: changeTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoInput, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"KNJCh5gCMACtm8MaOurZymUvOaQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gaspardmoindrot/todo-list/todo-list-front/src/App.tsx"],"names":["React","useState","useEffect","Todos","TodoInput","initTodos","text","complete","App","todos","setTodos","fetchData","response","fetch","json","method","then","data","ok","error","message","status","Promise","reject","setStatus","catch","setErrorMessage","console","changeTodos","todo","newTodos","map","unitTodo","addTodo","newTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,WAAP;;;AAEA,MAAMC,SAAiB,GAAG,CACxB;AACEC,EAAAA,IAAI,EAAE,EADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CADwB,CAA1B;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACI,SAAD,CAAlC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,YAAY;AAC5B,QAAIC,QAAQ,GAAG,MAAM,CACnB,MAAMC,KAAK,CAAC,iCAAD,CADQ,EAEnBC,IAFmB,EAArB;AAGAJ,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GALD;;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAArD,CAAL,CACKC,IADL,CACU,MAAMJ,QAAN,IAAkB;AACpB,YAAMK,IAAI,GAAG,MAAML,QAAQ,CAACE,IAAT,EAAnB,CADoB,CAGpB;;AACA,UAAI,CAACF,QAAQ,CAACM,EAAd,EAAkB;AACd;AACA,cAAMC,KAAK,GAAIF,IAAI,IAAIA,IAAI,CAACG,OAAd,IAA0BR,QAAQ,CAACS,MAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAEDK,MAAAA,SAAS,CAAC,mBAAD,CAAT;AACH,KAZL,EAaKC,KAbL,CAaWN,KAAK,IAAI;AACZO,MAAAA,eAAe,CAACP,KAAD,CAAf;AACAQ,MAAAA,OAAO,CAACR,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KAhBL;AAiBD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,QAAMS,WAAwB,GAAIC,IAAD,IAAgB;AAC/C,UAAMC,QAAQ,GAAGrB,KAAK,CAACsB,GAAN,CAAUC,QAAQ,IAAI;AACrC,UAAIA,QAAQ,KAAKH,IAAjB,EAAuB;AACrBG,QAAAA,QAAQ,CAACzB,QAAT,GAAoB,CAACyB,QAAQ,CAACzB,QAA9B;AACD;;AACD,aAAQyB,QAAR;AACD,KALgB,CAAjB;AAMAtB,IAAAA,QAAQ,CAACoB,QAAD,CAAR;AACD,GARD;;AAUA,QAAMG,OAAgB,GAAI3B,IAAD,IAAkB;AACzC,UAAM4B,OAAO,GAAG;AAAE5B,MAAAA,IAAF;AAAQC,MAAAA,QAAQ,EAAE;AAAlB,KAAhB;AACAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWyB,OAAX,CAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAIzB,KAAhB;AAAuB,QAAA,WAAW,EAAImB;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEK;AAApB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;GA3DQzB,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Todos } from './Todos';\nimport { TodoInput } from './TodoInput';\nimport './App.css';\n\nconst initTodos: Todo[] = [\n  {\n    text: '',\n    complete: false,\n  },\n];\n\nfunction App() {\n  const [todos, setTodos] = useState(initTodos);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    let response = await (\n      await fetch(\"http://localhost:8080/state/all\")\n    ).json();\n    setTodos(response);\n  };\n\n  useEffect(() => {\n    // DELETE request using fetch with error handling\n    fetch('https://jsonplaceholder.typicode.com/invalid-url', { method: 'DELETE' })\n        .then(async response => {\n            const data = await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n\n            setStatus('Delete successful');\n        })\n        .catch(error => {\n            setErrorMessage(error);\n            console.error('There was an error!', error);\n        });\n  }, []); \n\n  const changeTodos: ChangeTodos = (todo: Todo) => {\n    const newTodos = todos.map(unitTodo => {\n      if (unitTodo === todo) {\n        unitTodo.complete = !unitTodo.complete;\n      }\n      return (unitTodo);\n    });\n    setTodos(newTodos);\n  };\n\n  const addTodo: AddTodo = (text: string) => {\n    const newTodo = { text, complete: false };\n    setTodos([...todos, newTodo]);\n  };\n\n  return (\n    <>\n      <h1>Todos</h1>\n      <ul className=\"mylist\">\n        <Todos todos = {todos} changeTodos = {changeTodos} />\n      </ul>\n      <TodoInput addTodo={addTodo} />\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}