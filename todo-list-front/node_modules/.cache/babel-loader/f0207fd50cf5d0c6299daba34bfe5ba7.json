{"ast":null,"code":"var _jsxFileName = \"/Users/gaspardmoindrot/test/todo-list/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Todos } from './Todos';\nimport { TodoInput } from './TodoInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initTodos = [{\n  text: 'Test1',\n  complete: false\n}, {\n  text: 'Test2',\n  complete: true\n}];\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState(initTodos);\n\n  const changeTodos = todo => {\n    const newTodos = todos.map(unitTodo => {\n      if (unitTodo == todo) {\n        unitTodo.complete = !unitTodo.complete;\n      }\n\n      return unitTodo;\n    });\n    setTodos(newTodos);\n  };\n\n  const supprTodo = todo => {\n    todos.map();\n    todos.splice(0, 1);\n  };\n\n  const addTodo = text => {\n    const newTodo = {\n      text,\n      complete: false\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(Todos, {\n        todos: todos,\n        changeTodos: changeTodos,\n        supprTodo: supprTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoInput, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"6vCGnVIfpDS4hwrdvMEmLPGgjSE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gaspardmoindrot/test/todo-list/src/App.tsx"],"names":["React","useState","Todos","TodoInput","initTodos","text","complete","App","todos","setTodos","changeTodos","todo","newTodos","map","unitTodo","supprTodo","splice","addTodo","newTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,MAAMC,SAAiB,GAAG,CACxB;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CADwB,EAKxB;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CALwB,CAA1B;;AAWA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACG,SAAD,CAAlC;;AAEA,QAAMM,WAAwB,GAAIC,IAAD,IAAgB;AAC/C,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAUC,QAAQ,IAAI;AACrC,UAAIA,QAAQ,IAAIH,IAAhB,EAAsB;AACpBG,QAAAA,QAAQ,CAACR,QAAT,GAAoB,CAACQ,QAAQ,CAACR,QAA9B;AACD;;AACD,aAAQQ,QAAR;AACD,KALgB,CAAjB;AAMAL,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GARD;;AAUA,QAAMG,SAAoB,GAAIJ,IAAD,IAAgB;AAC3CH,IAAAA,KAAK,CAACK,GAAN;AACAL,IAAAA,KAAK,CAACQ,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACD,GAHD;;AAKA,QAAMC,OAAgB,GAAIZ,IAAD,IAAkB;AACzC,UAAMa,OAAO,GAAG;AAAEb,MAAAA,IAAF;AAAQC,MAAAA,QAAQ,EAAE;AAAlB,KAAhB;AACAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWU,OAAX,CAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAIV,KAAhB;AAAuB,QAAA,WAAW,EAAIE,WAAtC;AAAmD,QAAA,SAAS,EAAIK;AAAhE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;;GA/BQV,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Todos } from './Todos';\nimport { TodoInput } from './TodoInput';\n\nconst initTodos: Todo[] = [\n  {\n    text: 'Test1',\n    complete: false,\n  },\n  {\n    text: 'Test2',\n    complete: true,\n  },\n];\n\nfunction App() {\n  const [todos, setTodos] = useState(initTodos);\n\n  const changeTodos: ChangeTodos = (todo: Todo) => {\n    const newTodos = todos.map(unitTodo => {\n      if (unitTodo == todo) {\n        unitTodo.complete = !unitTodo.complete;\n      }\n      return (unitTodo);\n    });\n    setTodos(newTodos);\n  };\n\n  const supprTodo: SupprTodo = (todo: Todo) => {\n    todos.map()\n    todos.splice(0, 1);\n  }\n\n  const addTodo: AddTodo = (text: string) => {\n    const newTodo = { text, complete: false };\n    setTodos([...todos, newTodo]);\n  };\n\n  return (\n    <>\n      <ul>\n        <Todos todos = {todos} changeTodos = {changeTodos} supprTodo = {supprTodo}/>\n      </ul>\n      <TodoInput addTodo={addTodo} />\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}