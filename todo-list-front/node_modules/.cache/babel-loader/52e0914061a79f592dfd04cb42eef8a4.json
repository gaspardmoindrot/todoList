{"ast":null,"code":"var _jsxFileName = \"/Users/gaspardmoindrot/todo-list/todo-list-front/src/Todos.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Todos = ({\n  todos\n}) => {\n  async function changeTodos(todo) {\n    fetch('http://localhost:8080/state/delete/33', {\n      method: 'DELETE'\n    }); //empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          textDecoration: todo.complete ? 'line-through' : undefined\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: () => {},\n          type: \"checkbox\",\n          checked: todo.complete,\n          onClick: () => {\n            changeTodos(todo);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), \" \", todo.text, \" - \", todo.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/gaspardmoindrot/todo-list/todo-list-front/src/Todos.tsx"],"names":["React","Todos","todos","changeTodos","todo","fetch","method","map","textDecoration","complete","undefined","text","id"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAO,WAAP;;;AAMA,OAAO,MAAMC,KAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACnD,iBAAeC,WAAf,CAA4BC,IAA5B,EAAuC;AACrCC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA1C,CAAL,CADqC,CAEnC;AACH;;AAED,sBACE;AAAA,cACKJ,KAAK,CAACK,GAAN,CAAUH,IAAI,iBACf;AAAA,6BACI;AAAO,QAAA,KAAK,EAAE;AAAEI,UAAAA,cAAc,EAAEJ,IAAI,CAACK,QAAL,GAAgB,cAAhB,GAAiCC;AAAnD,SAAd;AAAA,gCACI;AAAO,UAAA,QAAQ,EAAE,MAAI,CAAE,CAAvB;AAAyB,UAAA,IAAI,EAAC,UAA9B;AAAyC,UAAA,OAAO,EAAEN,IAAI,CAACK,QAAvD;AAAiE,UAAA,OAAO,EAAE,MAAM;AAACN,YAAAA,WAAW,CAACC,IAAD,CAAX;AAAmB;AAApG;AAAA;AAAA;AAAA;AAAA,gBADJ,OAC6GA,IAAI,CAACO,IADlH,SAC2HP,IAAI,CAACQ,EADhI;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADC;AADL,mBADF;AAWD,CAjBM;KAAMX,K","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\ninterface Props {\n    todos: Todo[];\n}\n\nexport const Todos: React.FC<Props> = ({ todos }) => {\n  async function changeTodos (todo:Todo) {\n    fetch('http://localhost:8080/state/delete/33', { method: 'DELETE' });\n      //empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }\n\n  return (\n    <>\n        {todos.map(todo => (\n        <li>\n            <label style={{ textDecoration: todo.complete ? 'line-through' : undefined }}>\n                <input onChange={()=>{}} type=\"checkbox\" checked={todo.complete} onClick={() => {changeTodos(todo);}}/> {todo.text} - {todo.id}\n            </label>\n        </li>\n        ))}\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}